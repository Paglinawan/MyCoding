@use "../../foundation/_mixin.scss"as mixin;

/*-------------------------------
- variables
-------------------------------*/
html {
  --ham-width        : 32px;
  --ham-height       : 2px;
  --ham-spacing      : 8px;
  --ham-color        : var(--txt-Black);
  --ham-border-radius: 4px;
  --ham-hover-opacity: 0.7;
  --ham-active-color : white;
}

/*-------------------------------
- ham
-------------------------------*/
.ham {
  position  : relative;
  z-index   : 100;
  display   : inline-block;
  cursor    : pointer;
  transition: all .3s;

  &.is-active {
    .ham-inner,
    .ham-inner::before,
    .ham-inner::after {
      background-color: var(--ham-active-color);
    }
  }
}

.ham-box {
  width   : var(--ham-width);
  height  : calc(var(--ham-height) * 3 + var(--ham-spacing) * 2);
  display : inline-block;
  position: relative;
}

.ham-inner {
  display: block;
  top    : 50%;

  &,
  &::before,
  &::after {
    width           : var(--ham-width);
    height          : var(--ham-height);
    background-color: var(--ham-color);
    border-radius   : var(--ham-border-radius);
    position        : absolute;
    transition      : all .3s;
  }

  &::before,
  &::after {
    content: "";
    display: block;
  }

  &::before {
    top: calc((var(--ham-spacing) + var(--ham-height)) * -1);
  }

  &::after {
    bottom: calc((var(--ham-spacing) + var(--ham-height)) * -1);
  }
}


/*
* 3DY
*/
.ham--3dy {
  .ham-box {
    perspective: calc(var(--ham-width) * 2);
  }

  .ham-inner {
    transition: transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1),
      background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);

    &::before,
    &::after {
      transition: transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
    }
  }

  &.is-active {
    .ham-inner {
      background-color: transparent !important;
      transform       : rotateX(-180deg);

      &::before {
        transform: translate3d(0, calc(var(--ham-height) + var(--ham-spacing)), 0) rotate(45deg);
      }

      &::after {
        transform: translate3d(0, calc((var(--ham-height) + var(--ham-spacing)) * -1), 0) rotate(-45deg);
      }
    }
  }
}

/*-------------------------------
- hamArea
-------------------------------*/
.hamArea {
  visibility: hidden;
  opacity   : 0;

  position    : fixed;
  top         : 0;
  left        : 0;
  z-index     : 50;
  display     : flex;
  align-items : center;
  justify-self: center;
  background  : rgba(0, 0, 0, 0.7);
  color       : #fff;
  width       : 100vw;
  height      : 100vh;
  padding     : 20px;
  transition  : all .3s;
  text-align: center;

  body.is-active & {
    visibility: initial;
    opacity   : 1;
  }
}